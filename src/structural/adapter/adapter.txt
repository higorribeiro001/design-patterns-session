-> Intenção oficial:

Converter a interface de uma classe em outra interface esperada pelos clientes. O Adapter permite que certas classes trabalhem em conjunto, pois de outra forma seria impossível por causa de suas interfaces incompatíveis.

-> Sobre o adapter:

- É um padrão estrutural;
- Faz o exatamente o que um adaptador da vida real faz (pense em um adaptador de tomadas de um formato para outro);
- É muito usado para definir limites dentro de camadas da aplicação;
- Também pode ser usado para adaptar interfaces de código legado para um novo código;

-> Aplicabilidade:

- você não quiser que seu código dependa diretamente de código de terceiros ou legado
- você quiser usar um classe existente mas sua interface for incompatível com a interface que seu código ou domínio precisam
- você quiser reutilizar várias subclasses que não possuem determinada funcionalidade mas for impraticável estender o código de cada uma apenas para adicionar a funcionalidade desejada (o Decorator também faz isso)

-> Desacopla o código da aplicação de códigos de terceiros
-> Aplica o SRP ao separar a conversão de interfaces da lógica da aplicação
-> Aplica o OCP ao permitir introduzir novos Adapters para código existente
